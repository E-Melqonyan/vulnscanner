import yaml

from github_vuln_scanner import VulnerabilitySearcher, HEADERS
# from utilitys import attach_debugger

# get files from repository using github api
def get_files_from_repo(repo_name, repo_owner, repo_branch):
    """
    Get the files from a repository.

    Args:
        repo_name (str): The name of the repository.
        repo_owner (str): The owner of the repository.
        repo_branch (str): The branch of the repository.

    Returns:
        list: The list of files in the repository.
    """
    files = []
    url = f'https://api.github.com/repos/{repo_owner}/{repo_name}/git/trees/{repo_branch}?recursive=1'
    searcher = VulnerabilitySearcher()
    response = searcher.make_request(url, headers=HEADERS)
    data = response.json()
    for file in data['tree']:
        if file['type'] == 'blob' and (file['path'].endswith('.c') or file['path'].endswith('.cpp')):
            files.append(file['path'])
    return files

# get file text from repository using github api
def get_file_text_from_repo(repo_name, repo_owner, repo_branch, file_path):
    """
    Get the text of a file from a repository.

    Args:
        repo_name (str): The name of the repository.
        repo_owner (str): The owner of the repository.
        repo_branch (str): The branch of the repository.
        file_path (str): The path of the file.

    Returns:
        str: The text of the file.
    """
    url = f'https://api.github.com/repos/{repo_owner}/{repo_name}/contents/{file_path}?ref={repo_branch}'
    searcher = VulnerabilitySearcher()
    response = searcher.make_request(url, headers=HEADERS)
    data = response.json()
    return data['content']

if __name__ == '__main__':
    # attach_debugger()
    files = get_files_from_repo('ClickHouse', 'ClickHouse', 'master')
    text = []
    # for from 0 to 10 files
    for i in range(10):
        text.append(get_file_text_from_repo('ClickHouse', 'ClickHouse', 'master', files[i]))
    import base64
    for i in range(len(text)):
        text[i] = base64.b64decode(text[i]).decode('utf-8')
    open('test.cpp', 'w').write(text[0])
    print(files)

# code which using vulnerability_commits.yaml patches and files from repository and run it using redebug
def run_redebug():
    with open('vulnerable_commits.yml') as f:
        vulnerability_commits = yaml.load(f, Loader=yaml.FullLoader)

    patches = []
    for commit in vulnerability_commits:
        patches.append(commit['commit_diff'])

    files = get_files_from_repo('ClickHouse', 'ClickHouse', 'master')